server:
  port: 8080
  # 프록시 헤더 처리 활성화
  forward-headers-strategy: native
  # 톰캣 관련 설정
  tomcat:
    remote-ip-header: x-forwarded-for
    protocol-header: x-forwarded-proto
    protocol-header-https-value: https
    port-header: X-Forwarded-Port
  servlet:
    session:
      cookie:
        secure: true      # HTTPS에서만 쿠키 전송
        http-only: true
        same-site: lax
spring:
  servlet:
    multipart:
      max-file-size: 5MB #파일 하나의 최대 크기
      max-request-size: 30MB # 한 번에 최대 업로드 가능 용량

  redis:
    host: ${UPSTASH_REDIS_HOST}
    password: ${UPSTASH_REDIS_PASSWORD}
    port: 6379
    ssl: true
    timeout: 2000ms
  #    host: localhost


  cloud:
    gcp:
      storage:
        credentials:
          location: classpath:gcp-key.json  # 배포시 GCP_SA_KEY_BASE64 환경변수 사용
        project-id: ${GCP_PROJECT_ID}
        bucket: ${GCP_STORAGE_BUCKET}

  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}?useSSL=true
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}

  mvc:
    hiddenmethod:
      filter:
        enabled: true
    pathmatch:
      matching-strategy: ant_path_matcher
  devtools:
    livereload:
      enabled: false
    restart:
      enabled: false
  thymeleaf:
    cache: true

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        default_batch_fetch_size: 100
  sql:
    init:
      mode: never  # 스크립트 기반 초기화 비활성화
      schema-locations: classpath:sql/schema.sql

  security:
    oauth2:
      client:
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 네이버 로그인 인증 요청 uri
            token-uri: https://nid.naver.com/oauth2.0/token # 토큰을 발급받기 위한 uri
            user-info-uri: https://openapi.naver.com/v1/nid/me # 유저 정보를 받아오기 위한 uri
            user-name-attribute: response
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID} # Client ID
            client-secret: ${NAVER_CLIENT_SECRET} # Client Secret
            client-name: Naver
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            redirect-uri: ${NAVER_CALLBACK_URL}/login/oauth2/code/naver # Callback URL
            scope:
              - name
              - email
              - nickname

# GCP 서비스 계정 키 (Base64)
gcp:
  sa-key-base64: ${GCP_SA_KEY_BASE64}

springdoc:
  swagger-ui:
    enabled: false

logging:
  level:
    org.hibernate.SQL: warn
    # 애플리케이션 패키지
    commu.unhaha.service: info

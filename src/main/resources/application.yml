spring:
  servlet:
    multipart:
      max-file-size: 2MB #파일 하나의 최대 크기
      max-request-size: 30MB # 한 번에 최대 업로드 가능 용량

  profiles:
    active: local

  redis:
    host: ${UPSTASH_REDIS_HOST}
    password: ${UPSTASH_REDIS_PASSWORD}
    port: 6379
    ssl: true
    timeout: 2000ms
  #    host: localhost


  cloud:
    gcp:
      storage:
        credentials:
          location: classpath:gcp-key.json
        project-id: alert-outlet-456907-b9
        bucket: unhaha-imagestorage

#  datasource:
#    url: jdbc:mysql://localhost:3306/unhaha?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
#    username: root  # MySQL 사용자명
#    password: ${mysql-password}  # MySQL 비밀번호
#    driver-class-name: com.mysql.cj.jdbc.Driver
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}?useSSL=true
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}

  mvc:
    hiddenmethod:
      filter:
        enabled: true
    pathmatch:
      matching-strategy: ant_path_matcher
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: false
  thymeleaf:
    cache: false

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        default_batch_fetch_size: 100
  sql:
    init:
      mode: always  # 스크립트 기반 초기화 활성화
      schema-locations: classpath:sql/schema.sql

  security:
    oauth2:
      client:
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 네이버 로그인 인증 요청 uri
            token-uri: https://nid.naver.com/oauth2.0/token # 토큰을 발급받기 위한 uri
            user-info-uri: https://openapi.naver.com/v1/nid/me # 유저 정보를 받아오기 위한 uri
            user-name-attribute: response
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID} # Client ID
            client-secret: ${NAVER_CLIENT_SECRET} # Client Secret
            client-name: Naver
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            redirect-uri: ${NAVER_CALLBACK_URL}/login/oauth2/code/naver # Callback URL
            scope:
              - name
              - email
              - nickname

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tags-sorter: alpha
    try-it-out-enabled: true
  packages-to-scan: commu.unhaha.restapi  # 본인의 REST 컨트롤러 패키지
  paths-to-match: /api/**  # API 경로 패턴

logging:
  level:
    root: info
    org.hibernate.SQL: debug
    # 애플리케이션 패키지
    commu.unhaha.service: debug
